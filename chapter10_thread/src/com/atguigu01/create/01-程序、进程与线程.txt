
1. 程序、进程和线程的区分：
程序(program)：
    为完成特定任务，用某种语言编写的`一组指令的集合`。即指`一段静态的代码`，静态对象。
进程(process)：
    程序的一次执行过程，或是正在内存中运行的应用程序。如：运行的QQ，运行中的音乐。
    每个进程都有一个独立的内存空间，
    程序是静态的，进程是动态的
    进程作为操作系统调度和分配资源的最小单位

线程(thread)：
    进程可进一步细化为线程，是程序内部的一条执行路径。一个进程中至少有一个线程
    线程作为CPU调度和执行的最小单位
2. 线程调度策略
分时调度：
    所有线程轮流使用CPU的使用权，并且平均分配每个线程占用CPU的时间。
抢占式调度：
    让优先级高的线程以较大的概率优先使用CPU，如果线程的优先级相同，那么会随机选择一个（线程随机性），JAVa
    使用的为抢占式调度

3. 了解
> 单核CPU与多核CPU
> 并行与并发
    并行：两个或多个事件在`同一时刻`发生（同时发生）。指在同一时刻，
有`多条指令`在`多个CPU`上`同时`执行。比如：多个人同时做不同的事。
    并发： 指两个或多个事件在`同一个时间段内`发生。即在一段时间内，有`多条指令`在`单个CPU`上`快速轮换、交替`执行，
   使得在宏观上具有多个进程同时执行的效果。




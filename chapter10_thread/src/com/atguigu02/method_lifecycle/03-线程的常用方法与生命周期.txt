
一、线程的常用结构
1. 线程中的构造器
- public Thread() :分配一个新的线程对象。
- public Thread(String name) :分配一个指定名字的新的线程对象。
- public Thread(Runnable target) :指定创建线程的目标对象，它实现了Runnable接口中的run方法
- public Thread(Runnable target,String name) :分配一个带有指定目标新的线程对象并指定名字。

2.线程中的常用方法：
> start() : ① 启动线程，②调用线程
> run() : 将线程要执行的操作，声明在run() 中
> currentThread() : 获取当前执行代码对应的名字
> getName() : 得到线程名字
> setName() : 设置线程名字
> sleep(long millis) : 静态方法，调用时，可以使得当前线程睡眠指定的毫秒数
> yield() : 静态方法 一旦执行此方法，就释放CPU的执行权
> join() : 在线程a中通过线程b调用join()，意味着线程a进入阻塞状态，直到线程b执行结束
> isAlive() : 判断线程是否存活

过时方法：
> stop() : 已过时，强行结束一个线程的执行，直接进入死亡状态
> void suspend() / void resume() : 这两个操作就好比播放器的暂停和恢复。二者必须成对出现，
                                    否则非常容易发生死锁。

3. 线程的优先级：
Thread.currentThread().getPriority() ; 获取线程的优先级，默认优先级就是 5



二、线程的生命周期

